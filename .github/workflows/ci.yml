name: CI

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTC_BOOTSTRAP: 1

jobs:
  lint:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu

    name: Lint
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # make sure all code has been formatted with rustfmt and linted with clippy
      - run: rustup component add rustfmt clippy
      - name: rustfmt
        run: cargo fmt -- --check --color always

      # - name: cargo clippy
      #   run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu

    name: Test
    steps:
      - name: Checkout source Git repo
        uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: '--release'